{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactItem.js/ContactItem.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.js","components/ContactItem.js/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","views/ContactsView.js"],"names":["module","exports","label","input","container","list","title","item","text","deleteBtn","form","addBtn","Filter","dispatch","useDispatch","react_default","a","createElement","Fragment","className","s","type","name","pattern","onChange","e","setFilter","currentTarget","value","ContactItem","_ref","number","id","onClick","toast","success","contactsOperations","deleteContact","onDelete","ContactList","contacts","useSelector","contactsSelectors","getContacts","filterValue","getFilterValue","useEffect","fetchContacts","getFilteredContacts","Object","toConsumableArray","filter","contact","toLowerCase","includes","length","map","key","ContactForm","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","target","onSubmit","preventDefault","data","some","error","concat","checkNewContacts","addContact","htmlFor","placeholder","required","maxLength","__webpack_require__","d","__webpack_exports__","ContactsView","barStyles","display","alignItems","width","margin","paddingTop","isLoading","getLoading","Helmet","style","Spinner","ContactForm_ContactForm","Filter_Filter","components_ContactList_ContactList"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,sBAAAC,MAAA,4CCAlBH,EAAAC,QAAA,CAAkBG,UAAA,+BAAAC,KAAA,0BAAAC,MAAA,iDCAlBN,EAAAC,QAAA,CAAkBM,KAAA,0BAAAC,KAAA,0BAAAC,UAAA,qDCAlBT,EAAAC,QAAA,CAAkBS,KAAA,0BAAAR,MAAA,2BAAAC,MAAA,2BAAAQ,OAAA,2HC4BHC,MAtBf,WACE,IAAMC,EAAWC,cAEjB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,SAAOE,UAAWC,IAAElB,OAApB,4BACEa,EAAAC,EAAAC,cAAA,SACEE,UAAWC,IAAEjB,MACbkB,KAAK,OACLC,KAAK,SACLC,QAAQ,yFACRC,SAAU,SAAAC,GAAC,OAAIZ,EAASa,YAAUD,EAAEE,cAAcC,oGCZrD,SAASC,EAATC,GAA2C,IAApBR,EAAoBQ,EAApBR,KAAMS,EAAcD,EAAdC,OAAQC,EAAMF,EAANE,GACpCnB,EAAWC,cAMjB,OACEC,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAEb,MACfQ,EAAAC,EAAAC,cAAA,KAAGE,UAAWC,IAAEZ,MAAOc,GACvBP,EAAAC,EAAAC,cAAA,KAAGE,UAAWC,IAAEZ,MAAOuB,GACvBhB,EAAAC,EAAAC,cAAA,UACEE,UAAWC,IAAEX,UACbY,KAAK,SACLW,GAAIA,EACNC,QAAS,kBAbI,SAAAD,GAEf,OADCE,IAAMC,QAAN,4BACMtB,EAASuB,IAAmBC,cAAcL,IAWjCM,CAASN,KAJvB,kBCTN,IA2BeO,EA3BK,WAClB,IAAMC,EAAWC,YAAYC,IAAkBC,aACzCC,EAAcH,YAAYI,KAC1BhC,EAAWC,cAEjBgC,oBAAU,WACRjC,EAASuB,IAAmBW,kBAC3B,CAAClC,IAEJ,IAAMmC,EAA6C,KAAtBJ,EAAYhB,MAAgBY,EACrDS,OAAAC,EAAA,EAAAD,CAAIT,GAAUW,OAAO,SAAAC,GAAO,OAAIA,EAAQ9B,KAAK+B,cAAcC,SAASV,EAAYS,iBAEpF,OACEtC,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAEhB,WACd4C,EAAoBO,OACnBxC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACCH,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAEd,OAAjB,8BACAS,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAEf,MACd2C,EAAoBQ,IAAI,SAAA1B,GAAA,IAAGE,EAAHF,EAAGE,GAAIV,EAAPQ,EAAOR,KAAMS,EAAbD,EAAaC,OAAb,OACvBhB,EAAAC,EAAAC,cAACY,EAAD,CAAa4B,IAAKzB,EAAIA,GAAIA,EAAIV,KAAMA,EAAMS,OAAQA,QAGrDhB,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAEd,OAAjB,kDCtBEoD,EAAc,WAAM,IAAAC,EACPC,mBAAS,IADFC,EAAAZ,OAAAa,EAAA,EAAAb,CAAAU,EAAA,GACxBrC,EADwBuC,EAAA,GAClBE,EADkBF,EAAA,GAAAG,EAEHJ,mBAAS,IAFNK,EAAAhB,OAAAa,EAAA,EAAAb,CAAAe,EAAA,GAExBjC,EAFwBkC,EAAA,GAEhBC,EAFgBD,EAAA,GAGzBzB,EAAWC,YAAYC,IAAkBC,aAEzC9B,EAAWC,cAEXqD,EAAe,SAAArC,GAAgB,IAAbsC,EAAatC,EAAbsC,OACd9C,EAAgB8C,EAAhB9C,KAAMM,EAAUwC,EAAVxC,MAEd,OAAQN,GACN,IAAK,OACHyC,EAAQnC,GACR,MACF,IAAK,SACHsC,EAAUtC,GACV,MACF,QACE,SAqCN,OACEb,EAAAC,EAAAC,cAAA,QAAME,UAAWC,IAAEV,KAAM2D,SAhBN,SAAC5C,GACpBA,EAAE6C,iBAEF,IAAMlB,EAAU,CACd9B,KAAMA,EACNS,OAAQA,IAlBa,SAACwC,GACxB,IAAMjD,EAAOiD,EAAKjD,KAAK+B,cAGvB,OAFoBb,EAASgC,KAAK,SAAApB,GAAO,OAAIA,EAAQ9B,KAAK+B,cAAcC,SAAShC,OAG/EY,IAAMuC,MAAN,GAAAC,OAAeH,EAAKjD,KAApB,kCACO,IAeLqD,CAAiBvB,KACnBvC,EAASuB,IAAmBwC,WAAWxB,IACvClB,IAAMC,QAAN,+BA3BF4B,EAAQ,IACRG,EAAU,OAiCRnD,EAAAC,EAAAC,cAAA,SACEE,UAAWC,IAAElB,MACb2E,QAAQ,QAFV,oBAGE9D,EAAAC,EAAAC,cAAA,SACEE,UAAWC,IAAEjB,MACb6B,GAAG,OACHX,KAAK,OACLC,KAAK,OACLM,MAAON,EACPE,SAAU2C,EACV5C,QAAQ,yHACRjB,MAAM,wJACNwE,YAAY,QACZC,UAAQ,KAIZhE,EAAAC,EAAAC,cAAA,SACEE,UAAWC,IAAElB,MACb2E,QAAQ,UAFV,sBAGE9D,EAAAC,EAAAC,cAAA,SACEE,UAAWC,IAAEjB,MACb6B,GAAG,SACHX,KAAK,MACLC,KAAK,SACLM,MAAOG,EACPP,SAAU2C,EACV5C,QAAQ,yFACRyD,UAAU,KACV1E,MAAM,8CACNwE,YAAY,QACZC,UAAQ,KAGZhE,EAAAC,EAAAC,cAAA,UACEE,UAAWC,IAAET,OACbU,KAAK,UAFP,yBCnGN4D,EAAAC,EAAAC,EAAA,4BAAAC,IASA,IAAMC,EAAY,CAChBC,QAAS,QACTC,WAAY,SACZC,MAAO,QACPC,OAAQ,OACRC,WAAY,IAGC,SAASN,IACtB,IAAMO,EAAYlD,YAAYC,IAAkBkD,YAGhD,OACE7E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACE9E,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAAA,OAAK6E,MAAOT,GACTM,GAAa5E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,MAEdhF,EAAAC,EAAAC,cAAC+E,EAAD,MACAjF,EAAAC,EAAAC,cAACgF,EAAD,MACAlF,EAAAC,EAAAC,cAACiF,EAAD","file":"static/js/5.54f5a512.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Huys\",\"input\":\"Filter_input__3SCI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__a8Q4Z\",\"list\":\"ContactList_list__1fe5R\",\"title\":\"ContactList_title__2VMXw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3UNN1\",\"text\":\"ContactItem_text__3daEH\",\"deleteBtn\":\"ContactItem_deleteBtn__Kbvnt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1d_-s\",\"label\":\"ContactForm_label__1gAju\",\"input\":\"ContactForm_input__2-J3A\",\"addBtn\":\"ContactForm_addBtn__3RJv9\"};","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nimport { useDispatch} from 'react-redux';\nimport {  setFilter } from '../../redux/filterSlice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label className={s.label}>üîé Find by name \n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          onChange={e => dispatch(setFilter(e.currentTarget.value))}\n        />\n      </label>\n    </>\n  )\n};\n\nFilter.propTypes = {\n  filterName: PropTypes.string\n};\n\nexport default Filter;","import React from 'react';\nimport { contactsOperations } from '../../redux/contacts';\nimport { useDispatch} from 'react-redux';\nimport toast from 'react-hot-toast';\nimport s from './ContactItem.module.css';\n\nexport function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const onDelete = id => {\n     toast.success(`The contact was deleted!`)\n    return dispatch(contactsOperations.deleteContact(id))\n  };\n\n  return (\n    <li className={s.item}>\n      <p className={s.text}>{name}</p>\n      <p className={s.text}>{number}</p>\n      <button\n        className={s.deleteBtn}\n        type=\"button\"\n        id={id}\n      onClick={() =>onDelete(id)}\n      >Delete ‚ùå\n      </button>\n    </li>\n  )\n};","import React, { useEffect } from 'react';\nimport s from './ContactList.module.css';\nimport { getFilterValue } from '../../redux/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  contactsSelectors } from '../../redux/contacts';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport { ContactItem } from '../ContactItem.js/ContactItem';\n\nconst ContactList = () => {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filterValue = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n  \n  const getFilteredContacts = (filterValue.value === '') ? contacts\n    : [...contacts].filter(contact => contact.name.toLowerCase().includes(filterValue.toLowerCase()));\n\n  return (\n    <div className={s.container}>\n      {(getFilteredContacts.length) ?\n        (<>\n          <h1 className={s.title}>üìù Contact List </h1>\n          <ul className={s.list}>\n            {getFilteredContacts.map(({ id, name, number }) =>\n              <ContactItem key={id} id={id} name={name} number={number} />)}\n          </ul>\n        </>)\n        : (<h1 className={s.title}>No contacts</h1>)}\n    </div>\n  )\n};\n\nexport default ContactList;","import React from \"react\";\nimport toast from 'react-hot-toast';\nimport s from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport contactsSelectors  from '../../redux/contacts/contacts-selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const dispatch = useDispatch();\n  \n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n  \n  const checkNewContacts = (data) => {\n    const name = data.name.toLowerCase();\n    const sameContact = contacts.some(contact => contact.name.toLowerCase().includes(name));\n    \n    if (sameContact) {\n      toast.error(`${data.name} is already in your contacts`)\n      return false;\n    } \n    \n    return true;\n  };\n\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n  \n    const contact = {\n      name: name,\n      number: number\n    };\n\n    if (checkNewContacts(contact)) {\n      dispatch(contactsOperations.addContact(contact));\n      toast.success(`Was added to your contacts!`)\n      resetForm();\n    };\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label\n        className={s.label}\n        htmlFor=\"name\">üë§ Name\n        <input\n          className={s.input}\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n          title=\"write the name with the use of letters, apostrophe, dash and spaces. For example, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc\"\n          placeholder=\". . .\"\n          required\n        />\n      </label>\n\n      <label\n        className={s.label}\n        htmlFor=\"number\">‚òéÔ∏è Number\n        <input\n          className={s.input}\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          maxLength=\"14\"\n          title=\"use the numeric format for the phone number\"\n          placeholder=\". . .\"\n          required\n        />\n      </label>\n      <button\n        className={s.addBtn}\n        type=\"submit\"\n      >\n        Add contact\n      </button>\n    </form>\n  )\n};","import React from \"react\";\nimport Filter from '../components/Filter/Filter';\nimport { Helmet } from 'react-helmet';\nimport ContactList from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { useSelector } from \"react-redux\";\nimport { contactsSelectors } from \"../redux/contacts\";\nimport { Spinner } from \"../components/Spinner/Spinner\";\n\nconst barStyles = {\n  display: 'block',\n  alignItems: 'center',\n  width: '450px',\n  margin: 'auto',\n  paddingTop: 20,\n};\n\nexport default function ContactsView() {\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  \n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <div style={barStyles}>\n        {isLoading && <Spinner />}\n\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n};"],"sourceRoot":""}